openapi: 3.0.3
info:
  title: StellarStay Hotels API
  description: Production-ready hotel reservation system with dynamic pricing and AI-powered room search
  version: 1.0.0
  contact:
    name: StellarStay Hotels
    url: https://github.com/rubbini-en/stellarstay-hotels

servers:
  - url: http://localhost:8000
    description: Local development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"

  /api/reservations:
    post:
      summary: Create a new reservation
      description: Creates a new hotel reservation with dynamic pricing and conflict detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roomType
                - checkIn
                - checkOut
                - numGuests
              properties:
                roomType:
                  type: string
                  enum: [junior, king, presidential]
                  description: Type of room to reserve
                checkIn:
                  type: string
                  format: date
                  description: Check-in date (YYYY-MM-DD)
                checkOut:
                  type: string
                  format: date
                  description: Check-out date (YYYY-MM-DD)
                numGuests:
                  type: integer
                  minimum: 1
                  maximum: 8
                  description: Number of guests
                includeBreakfast:
                  type: boolean
                  default: false
                  description: Whether to include breakfast
      headers:
        idempotency-key:
          description: Optional idempotency key for safe retries
          schema:
            type: string
      responses:
        '200':
          description: Reservation already exists (idempotent response)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - overlapping reservation exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/reservations/{id}:
    get:
      summary: Get reservation by ID
      description: Retrieves a reservation by its unique identifier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Reservation ID
      responses:
        '200':
          description: Reservation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          description: Reservation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/ai/query:
    post:
      summary: AI-powered room search
      description: Natural language room search using AI to parse queries and recommend rooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: Natural language query for room search
                  example: "I need a king suite for 2 guests under $300 per night"
      responses:
        '200':
          description: AI query processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIResponse'
        '400':
          description: Bad request - invalid query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: AI service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Reservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique reservation identifier
        roomType:
          type: string
          enum: [junior, king, presidential]
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        numGuests:
          type: integer
        includeBreakfast:
          type: boolean
        totalPriceCents:
          type: integer
          description: Total price in cents
        pricingBreakdown:
          type: object
          properties:
            basePriceCents:
              type: integer
            weekendSurchargeCents:
              type: integer
            lengthDiscountCents:
              type: integer
            breakfastCents:
              type: integer
        createdAt:
          type: string
          format: date-time

    AIResponse:
      type: object
      properties:
        query:
          type: string
          description: Original query
        intent:
          type: object
          properties:
            roomType:
              type: string
              enum: [junior, king, presidential, null]
            maxPriceDollars:
              type: number
              nullable: true
            numGuests:
              type: number
              nullable: true
            checkIn:
              type: string
              format: date
              nullable: true
            checkOut:
              type: string
              format: date
              nullable: true
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/RoomRecommendation'
        timestamp:
          type: string
          format: date-time

    RoomRecommendation:
      type: object
      properties:
        type:
          type: string
          enum: [junior, king, presidential]
        basePriceDollars:
          type: number
        description:
          type: string
        available:
          type: boolean
        features:
          type: array
          items:
            type: string

    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
          examples: [BAD_REQUEST, NOT_FOUND, CONFLICT, AI_SERVICE_ERROR]
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
